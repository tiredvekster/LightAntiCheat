plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'maven-publish'
}

group = 'me.vekster'
version = '1.2.7'

repositories {
    mavenCentral()
    // Config Updater
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    // Floodgate
    maven { url 'https://repo.opencollab.dev/main/' }
    // FoliaLib
    maven { url 'https://nexuslite.gcnt.net/repos/other/' }
}

dependencies {
    // JetBrains Annotations
    implementation 'org.jetbrains:annotations:25.0.0'
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    // Spigot API
    compileOnly files('comp/spigot-1.8.8-R0.1-SNAPSHOT-latest.jar')
    // Netty
    compileOnly 'io.netty:netty-all:4.1.113.Final'
    // LightInjector
    implementation files('impl/LightInjector-1.0.2-forked.jar')
    // FoliaLib
    implementation 'com.tcoded:FoliaLib:0.4.2'
    // Floodgate
    compileOnly 'org.geysermc.floodgate:api:2.2.3-SNAPSHOT'
    // Config Updater
    implementation 'com.tchristofferson:ConfigUpdater:2.1-SNAPSHOT'
    // MultiVersion
    implementation fileTree('impl/multiversion')
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/tiredvekster/LightAntiCheat"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }


    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching(['plugin.yml']) {
        expand props
    }
}

shadowJar {
    exclude('LICENSE', 'META-INF/**')
    relocate('com.fren_gor', 'org.fren_gor')
    relocate('com.tchristofferson', 'org.tchristofferson')
    relocate('com.tcoded', 'org.tcoded')
    archiveClassifier.set('')
    destinationDirectory.set(file(destinationPath))
}
